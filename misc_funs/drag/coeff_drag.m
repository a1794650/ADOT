

function [CD_2,CD_3] = coeff_drag(V_CR_2, V_CR_3, plane)

    [CD_CR_2, CD_CR_3] = C_D_AtCruise(V_CR_2, V_CR_3, plane);
    % 
    % plane.turning_properties.coeff_lift = 0.75*plane.wing.coeff_lift;
    % plane.turning_properties.speed2     = sqrt(2*plane.misc_properties.load_factor*...
    %                   plane.mass2*plane.physics.gravity/...
    %                   (rho*plane.wing.area*...
    %                   plane.turning_properties.coeff_lift)); 
    % plane.turning_properties.speed3    = sqrt(2*plane.misc_properties.load_factor*...
    %                   plane.mass3*plane.physics.gravity/...
    %                   (rho*plane.wing.area*...
    %                   plane.turning_properties.coeff_lift));   % turning velocity for mission 3 configuration      [m/s].
    %V_T_max  = max(V_T_2, V_T_3);                 % maximum cruise velocity   
   
    V_max = max([plane.turning_properties.speed2 ,plane.turning_properties.speed3 ,V_CR_2, V_CR_3]);

    plane.fuselage.reynolds_num = ...
        V_max*plane.fuselage.length/plane.physics.kinematic_viscosity;    
    
    plane.fuselage.coeff_drag = (0.455)/(((log(plane.fuselage.reynolds_num)...
        ^2.58)*(1+0.144*(V_max/...
        sqrt(plane.physics.gas_constant*...
        plane.physics.thermodynamic_ratio*...
        plane.physics.temperature)))));    
   
    
    plane.landing_gear.coeff_drag = plane.landing_gear.area/plane.wing.area*...
        (0.455/(log10(plane.fuselage.reynolds_num))^2.58);
    

    CD_2 = plane.fuselage.coeff_drag*plane.fuselage.form_factor*...
        plane.fuselage.interference_factor*plane.wing.wetted_area/...
        plane.wing.area+plane.landing_gear.coeff_drag+...
        plane.wing.interference_factor*CD_CR_2+...
        plane.horz_stabiliser.interference_factor*...
        plane.horz_stabiliser.coeff_drag;
    
    CD_3 = plane.fuselage.coeff_drag*plane.fuselage.form_factor*...
        plane.fuselage.interference_factor*plane.wing.wetted_area/...
        plane.wing.area+plane.landing_gear.coeff_drag+...
        plane.wing.interference_factor*CD_CR_3+...
        plane.horz_stabiliser.interference_factor*...
        plane.horz_stabiliser.coeff_drag;

end