

function calc_V_cr(plane) %MAYBE GET RID OF LOOP

    plane.turning_properties.coeff_lift = 0.75*plane.wing.coeff_lift_max;

    plane.turning_properties.speed2 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass2*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));   

    plane.turning_properties.speed3 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass3*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));  

    
    V_CR_guess = [40;40];
    options = optimset('Display','off');

    power_range = linspace(0.1*plane.motor.power_max*plane.motor.number,...
                           1.0*plane.motor.power_max*plane.motor.number,...
                           plane.num_power_vals); 

    
    
    for i = 1:plane.num_power_vals

       V_CR_calc = fsolve(@(V_CR)powerAtCruise(V_CR, plane)...
                                    -power_range(i)*ones(2,1),...
                                    V_CR_guess, options);


       plane.cruise_properties.power = power_range(i); 

       plane.cruise_properties.speed2 = V_CR_calc(1);
       plane.cruise_properties.speed3 = V_CR_calc(2);
    
        [plane.cruise_properties.coeff_lift2,...
            plane.cruise_properties.coeff_lift3] = ...
            C_LAtCruise(plane.cruise_properties.speed2,...
            plane.cruise_properties.speed3,plane);

        [plane.cruise_properties.coeff_drag2,...
         plane.cruise_properties.coeff_drag3] = C_D_AtCruise(...
         plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);
    
        %This just upates C_L_cr based on the fsolved speeds.
    
        [plane.misc_properties.oswald_efficiency2,...
         plane.misc_properties.oswald_efficiency3] =...
         oswald_efficiency(plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);

        plane.cruise_properties.time2  =...
        plane.course.length/plane.cruise_properties.speed2 + ...
            4*pi*plane.turning_properties.speed2/plane.physics.gravity/...
            sqrt(plane.misc_properties.load_factor^2-1);

        plane.cruise_properties.time3  =...
        plane.course.length/plane.cruise_properties.speed3 + ...
            4*pi*plane.turning_properties.speed3/plane.physics.gravity/...
            sqrt(plane.misc_properties.load_factor^2-1);
  

        BC = plane.battery.capacity -...
        plane.cruise_properties.power*...
        (5 + plane.misc_properties.time_safety)*...
        1.25*plane.units.W2mW*plane.units.min2h/...
        plane.battery.voltage; %This will be in mAh. (or is it mWh)

        if (BC < 0)
            plane.cruise_properties.speed2 = V_CR_guess(1);
            plane.cruise_properties.speed3 = V_CR_guess(2);

            if (i>1)
                plane.cruise_properties.power = power_range(i-1); 

            else
                plane.cruise_properties.power = NaN;  %it failed

            end

            
            break;

        else
            V_CR_guess(1) = plane.cruise_properties.speed2;
            V_CR_guess(2) = plane.cruise_properties.speed3;
        end

    end



    [plane.cruise_properties.coeff_lift2,...
            plane.cruise_properties.coeff_lift3] = ...
            C_LAtCruise(plane.cruise_properties.speed2,...
            plane.cruise_properties.speed3,plane);

    [plane.cruise_properties.coeff_drag2,...
     plane.cruise_properties.coeff_drag3] = C_D_AtCruise(...
     plane.cruise_properties.coeff_lift2,...
     plane.cruise_properties.coeff_lift3, plane);

    %This just upates C_L_cr based on the fsolved speeds.

    [plane.misc_properties.oswald_efficiency2,...
     plane.misc_properties.oswald_efficiency3] =...
     oswald_efficiency(plane.cruise_properties.coeff_lift2,...
     plane.cruise_properties.coeff_lift3, plane);

    plane.cruise_properties.time2  =...
    plane.course.length/plane.cruise_properties.speed2 + ...
        4*pi*plane.turning_properties.speed2/plane.physics.gravity/...
        sqrt(plane.misc_properties.load_factor^2-1);

    plane.cruise_properties.time3  =...
    plane.course.length/plane.cruise_properties.speed3 + ...
        4*pi*plane.turning_properties.speed3/plane.physics.gravity/...
        sqrt(plane.misc_properties.load_factor^2-1);


   
end

