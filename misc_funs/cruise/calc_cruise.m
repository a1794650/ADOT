

function calc_cruise(plane) %MAYBE GET RID OF LOOP

    plane.turning_properties.coeff_lift = 0.75*plane.wing.coeff_lift_max;

    plane.turning_properties.speed2 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass2*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));   

    plane.turning_properties.speed3 = sqrt(2*plane.misc_properties.load_factor*...
                                   plane.mass3*plane.physics.gravity/...
                                   (plane.physics.air_density30*plane.wing.area*...
                                   plane.turning_properties.coeff_lift));  

    


    P_CR = powerAtCruise(...
        [plane.cruise_properties.speed2,...
        plane.cruise_properties.speed3], plane);

    plane.cruise_properties.power2 = P_CR(1);
    plane.cruise_properties.power3 = P_CR(2);

    [plane.cruise_properties.coeff_lift2,...
            plane.cruise_properties.coeff_lift3] = ...
            C_LAtCruise(plane.cruise_properties.speed2,...
            plane.cruise_properties.speed3,plane);

        [plane.cruise_properties.coeff_drag2,...
         plane.cruise_properties.coeff_drag3] = C_D_AtCruise(...
         plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);
    
        %This just upates C_L_cr based on the fsolved speeds.
    
        [plane.misc_properties.oswald_efficiency2,...
         plane.misc_properties.oswald_efficiency3] =...
         oswald_efficiency(plane.cruise_properties.coeff_lift2,...
         plane.cruise_properties.coeff_lift3, plane);

        plane.cruise_properties.time2  =...
        plane.course.length/plane.cruise_properties.speed2 + ...
            4*pi*plane.turning_properties.speed2/plane.physics.gravity/...
            sqrt(plane.misc_properties.load_factor^2-1);

        plane.cruise_properties.time3  =...
        plane.course.length/plane.cruise_properties.speed3 + ...
            4*pi*plane.turning_properties.speed3/plane.physics.gravity/...
            sqrt(plane.misc_properties.load_factor^2-1);

   
end

